plugins {
    id 'groovy'
}

group = 'com.olegastakhov'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(22)
		vendor = JvmVendorSpec.AZUL
		implementation = JvmImplementation.VENDOR_SPECIFIC
	}
}

repositories {
    mavenCentral()
}

dependencies {
    testImplementation 'org.apache.commons:commons-lang3:3.14.0'

    testImplementation 'org.slf4j:slf4j-api:2.0.12'
    testImplementation 'org.slf4j:slf4j-reload4j:2.0.12'
    testImplementation 'com.google.code.gson:gson:2.10.1'

    testImplementation 'org.apache.httpcomponents.client5:httpclient5:5.3.1'

    testImplementation 'commons-io:commons-io:2.15.1'
    testImplementation 'org.apache.httpcomponents:httpmime:4.5.14'

    testImplementation 'org.testcontainers:testcontainers:1.20.1'
    testImplementation 'org.testcontainers:spock:1.20.1'

    testRuntimeOnly 'org.postgresql:postgresql:42.7.1'

    testImplementation "org.apache.groovy:groovy-all:4.0.18"
    testImplementation ("org.spockframework:spock-core:${spockGroovyVersion}")  {
        // because we have separate implementation dependency: org.apache.groovy:groovy:4.0.18
        // but it works without this exclude as well
        exclude group: 'org.apache.groovy'
    }
}


testing {
    suites {
        test {
            useSpock("${spockGroovyVersion}")
        }
    }
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}


test {
    systemProperty "file.encoding", "UTF-8"
    if (project.hasProperty("runInParallel")) {
        systemProperty "runInParallel", project.getProperty("runInParallel")
    }
    if (project.hasProperty("ci-mode")) { // continuous integration
        systemProperty "ci-mode", project.getProperty("ci-mode")
    }
}
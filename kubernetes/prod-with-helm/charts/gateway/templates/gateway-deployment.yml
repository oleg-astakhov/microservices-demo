apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.microservice.name }}
  namespace: {{ .Values.microservice.namespace }}
spec:
  replicas: {{ .Values.microservice.replicas }}
  selector:
    matchLabels:
      app.kubernetes.io/instance: {{ .Values.microservice.name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: micros
        app.kubernetes.io/component: backend
        app.kubernetes.io/instance: {{ .Values.microservice.name }}
    spec:
      initContainers:
        - name: wait-for-quiz
          image: busybox:1.37.0
          command:
            - /bin/sh
            - -c
            - |
              until nc -vz {{ .Values.waitForServices.quiz.host }} {{ .Values.waitForServices.quiz.port }}; do
                echo "Waiting for Quiz to be ready..."
                sleep 3
              done
      containers:
        - name: {{ .Values.microservice.name }}
          image: {{ .Values.workload.image }}
          resources:
            requests:
              memory: {{ .Values.workload.resources.requests.memory }}
              cpu: {{ .Values.workload.resources.requests.cpu }}
            limits:
              memory: {{ .Values.workload.resources.limits.memory }}
          ports:
            - containerPort: {{ .Values.workload.port }}
          envFrom:
            - configMapRef:
                name: {{ .Values.microservice.name }}-config
          livenessProbe:
            exec:
              command: [ "java", "-jar", "/usr/local/gateway/healthcheck.jar" ]
            initialDelaySeconds: {{ .Values.workload.livenessDelay }}
            periodSeconds: 30
            timeoutSeconds: 10
            failureThreshold: 3
          readinessProbe:
            exec:
              command: [ "java", "-jar", "/usr/local/gateway/healthcheck.jar" ]
            initialDelaySeconds: {{ .Values.workload.readinessDelay }}
            periodSeconds: 30
            timeoutSeconds: 10
            failureThreshold: 3